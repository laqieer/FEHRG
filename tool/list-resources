#!/usr/bin/env python3

import os
import sys
import json

Path = '../../CLionProjects/fe7-jp-stunning-tribble/res/feh'

Common = {'': []}

CommonPath = os.path.join(Path, 'files/assets/Common/')

def read_common_resources():
    for root, dirs, files in os.walk(CommonPath):
        for dir in dirs:
            if dir[0] == '.':
                continue
            fullname = os.path.join(root, dir)
            Common[root[len(CommonPath):]].append(dir)
            Common[fullname[len(CommonPath):]] = []
    
        for filename in files:
            if filename[0] == '.':
                continue
            key = root[len(CommonPath):]
            if key == 'SRPG':
                key = os.path.join(key, os.path.splitext(filename)[0])
                Common[key] = []
            fullname = os.path.join(root, filename)
            with open(fullname, 'r', encoding='utf8') as fp:
                Common[key] += json.load(fp)


def main():
    read_common_resources()

    if len(sys.argv) == 1:
        print(Common[''])
    elif len(sys.argv) == 2:
        if sys.argv[1] not in Common:
            print("Resource %s doesn't exist." % sys.argv[1])
            sys.exit(1)
        print(Common[sys.argv[1]])
    elif len(sys.argv) == 3:
        if sys.argv[1] not in Common:
            print("%s not found." % sys.argv[1])
            sys.exit(1)
        for item in Common[sys.argv[1]]:
            if type(item) is dict and item.get("id_tag") == sys.argv[2]:
                print(item)
    elif len(sys.argv) == 4:
        if sys.argv[1] not in Common:
            print("%s not found." % sys.argv[1])
            sys.exit(1)
        for item in Common[sys.argv[1]]:
            if type(item) is dict and item.get("id_tag") == sys.argv[2]:
                print(item.get(sys.argv[3]))
    else:
        print("Too more parameters.")
        print("Usage: %s resource id_tag property" % sys.argv[0])


if __name__ == "__main__":
    main()
